const rootLayout = `import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import { Toaster } from "sonner";
import { SiteProvider } from "simplcms";
import AdminToolbar from "simplcms";
import "./globals.css";
import { cookies } from "next/headers";
import { CSSProperties } from "react";
import Navigation from "simplcms";
import { getServerSession } from "next-auth";
import { redirect } from "next/navigation";
import { User } from "@/types/types";
import { simplCms } from "simplCms";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const platformConfiguration = simplCms.getServerEnvVars();
  const cookieStore = await cookies();
  const darkModeCookie = cookieStore.get("darkMode");
  const darkMode = darkModeCookie?.value === "true";
  let user: User | null = null;
  if (platformConfiguration.database && platformConfiguration.oauth) {
    const session = await getServerSession();
    if (session?.user?.email) {
      user = await getUserByEmail(session.user.email);
    }
  }

  return (
    <html lang="en" className={darkMode ? "dark" : ""}>
      <body className="h-screen w-screen overflow-hidden bg-background">
        <SiteProvider initialSettings={{ darkMode }}>
          <div className="z-50 fixed w-screen top-0">
            <AdminToolbar user={user} />
            <Navigation />
          </div>
          {children}
          <Toaster
            toastOptions={{
              unstyled: true,
              classNames: {
                toast:
                  "bg-background border p-4 dark:border-dark text-foreground rounded-md flex gap-2 items-center text-sm w-[23rem]",
                title: "text-foreground font-normal",
                description: "text-foreground font-normal",
              },
            }}
          />
        </SiteProvider>
      </body>
    </html>
  );
}`

const homePage =`import { TooltipProvider } from "@/components/ui/tooltip";
import { getServerEnvVars, simplCms } from "simplCms";
import SetupForm from "./setupForm";
import { Page } from "@/types/types";
import PageRenderer from "./pageRenderer";
import { defaultHomePageConfig } from "@/lib/utils";

export default async function Home() {
  const platformConfiguration = getServerEnvVars();
  let pageConfig: Page = defaultHomePageConfig;
  if (platformConfiguration.database) {
    const page = await simplCms.pages.getPageByRoute("/");
    if (page) {
      pageConfig = page;
    }
  }

  return (
    <TooltipProvider>
      <div className="size-full flex justify-center items-center overflow-hidden font-[family-name:var(--font-geist-sans)] pt-20">
        <div className="size-full absolute top-0 left-0 z-0 bg-[linear-gradient(215deg,rgba(0,0,0,0.25)_0%,transparent_40%)] bg-background dark:bg-[linear-gradient(215deg,rgba(255,255,255,0.1)_0%,transparent_40%)]" />
        <main className="flex gap-4 items-center flex-col z-50 text-foreground">
          <PageRenderer page={pageConfig} />
        </main>
      </div>
    </TooltipProvider>
  );
}`

module.exports = {
    rootLayout, 
    homePage
}